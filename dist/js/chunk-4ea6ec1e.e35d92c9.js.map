{"version":3,"sources":["webpack:///./src/components/settings/UserSparkline.vue?bfdd","webpack:///../../../../src/components/VSparkline/helpers/core.ts","webpack:///../../../../src/components/VSparkline/helpers/math.ts","webpack:///../../../../src/components/VSparkline/helpers/path.ts","webpack:///../../../src/components/VSparkline/VSparkline.ts","webpack:///./src/components/settings/UserSparkline.vue?b5eb","webpack:///src/components/settings/UserSparkline.vue","webpack:///./src/components/settings/UserSparkline.vue?f616","webpack:///./src/components/settings/UserSparkline.vue","webpack:///../../../src/components/VCard/index.ts"],"names":["maxY","totalValues","values","maxValue","Math","minValue","gridX","maxX","gridY","x","minX","index","y","value","horizonY","height","parseInt","p0","p2","p1","vector","to","from","length","unitVector","radius","fill","start","points","end","next","prev","isCollinear","checkCollinear","point","threshold","getDistance","isTooCloseForRadius","radiusForPoint","before","moveTo","after","mixins","name","inheritAttrs","props","autoDraw","autoDrawDuration","type","default","autoDrawEasing","autoLineWidth","color","gradient","gradientDirection","validator","val","includes","String","labels","labelSize","Number","lineWidth","padding","showLabels","smooth","Boolean","width","data","lastLength","computed","parsedPadding","this","parsedWidth","parsedHeight","parsedLabelSize","totalHeight","totalWidth","_lineWidth","totalPadding","parseFloat","boundary","minY","hasLabels","$scopedSlots","parsedLabels","len","i","item","normalizedValues","map","_values","genPoints","textY","_radius","watch","immediate","handler","path","methods","genGradient","stops","attrs","offset","$createElement","id","gradientUnits","x1","y1","x2","y2","genG","style","fontSize","textAnchor","dominantBaseline","genPath","d","stroke","_uid","ref","genLabels","children","genLabel","label","genBars","bars","offsetX","display","viewBox","genClipPath","rounding","rx","ry","attributeName","dur","genTrend","setTextColor","render","_vm","_h","_c","_self","staticClass","_v","staticRenderFns","component","VCard","VCardText","VSheet","VSparkline","VCardActions","VCardSubtitle","VCardTitle"],"mappings":"2IAAA,W,sLCEM,gBAIJ,IAAM,EAAN,EAAM,OAAN,EAAM,OAAN,EAAM,KAAoBA,EAA1B,EAA0BA,KACpBC,EAAcC,EAApB,OACMC,EAAWC,KAAA,UAAAA,KAAI,eAArB,IACMC,EAAWD,KAAA,UAAAA,KAAI,eAArB,IAEME,GAASC,EAAD,IAAiBN,EAA/B,GACMO,GAASR,EAAD,IAAkBG,EAAD,GAA/B,GAEA,OAAOD,EAAA,KAAW,cAChB,MAAO,CACLO,EAAGC,EAAOC,EADL,EAELC,EAAGZ,GAAQa,EAAD,GAFL,EAGLA,YAKA,gBAIJ,IAAM,EAAN,EAAM,OAAN,EAAM,OAAN,EAAM,KAAoBb,EAA1B,EAA0BA,KACpBC,EAAcC,EAApB,OACIC,EAAWC,KAAA,UAAAA,KAAI,eAAnB,IACIC,EAAWD,KAAA,UAAAA,KAAI,eAAnB,IAEIC,EAAJ,IAAkBA,EAAA,GACdF,EAAJ,IAAkBA,EAAA,GAElB,IAAMG,EAAQC,EAAd,EACMC,GAASR,EAAD,IAAkBG,EAAD,GAA/B,GACMW,EAAWd,EAAOI,KAAA,IAASC,EAAjC,GAEA,OAAOH,EAAA,KAAW,cAChB,IAAMa,EAASX,KAAA,IAASI,EAAxB,GAEA,MAAO,CACLC,EAAGC,EAAOC,EADL,EAELC,EAAGE,EAAA,KACCD,EAAF,GAHG,EAILE,SACAF,Y,UC7CN,SAAS,EAAT,GACE,OAAOG,SAASH,EAAhB,IAQI,kBACJ,OAAO,EAAII,EAAA,EAAOC,EAAX,KAAqB,EAAI,EAAIC,EAA7B,IAAsC,EAAIF,EAAA,EAAOC,EAAX,KAAqB,EAAI,EAAIC,EAA1E,GAGI,gBACJ,OAAOf,KAAA,KACLA,KAAA,IAASc,EAAA,EAAOC,EAAhB,KAA2Bf,KAAA,IAASc,EAAA,EAAOC,EAAhB,EAD7B,IAKI,kBACJ,IAAMC,EAAS,CAAEX,EAAGY,EAAA,EAAOC,EAAZ,EAAoBV,EAAGS,EAAA,EAAOC,EAAKV,GAC5CW,EAASnB,KAAA,KAAWgB,EAAA,EAAWA,EAAZ,EAAyBA,EAAA,EAAWA,EAA7D,GACMI,EAAa,CAAEf,EAAGW,EAAA,EAAL,EAAwBR,EAAGQ,EAAA,EAAWG,GAEzD,MAAO,CACLd,EAAGa,EAAA,EAASE,EAAA,EADP,EAELZ,EAAGU,EAAA,EAASE,EAAA,EAAeC,GCtBzB,gBAA6E,IAAzBC,EAAyB,wDAAXX,EAAW,uDAA7E,GACEY,EAAQC,EAAd,QACMC,EAAMD,EAAOA,EAAA,OAAnB,GAEA,OACGF,EAAO,IAAH,OAAOC,EAAMlB,EAAb,YAAkBM,EAASY,EAAT,EAAmB,EAArC,aAA2CA,EAAMlB,EAAjD,YAAsDkB,EAAtD,cAAsEA,EAAMlB,EAA5E,YAAiFkB,EAAtF,IACAC,EAAA,KACO,cACH,IAAME,EAAOF,EAAOjB,EAApB,GACMoB,EAAOH,EAAOjB,EAAP,IAAb,EACMqB,EAAcF,GAAQG,EAAeH,EAAMI,EAAjD,GAEA,IAAKJ,GAAL,EACE,iBAAWI,EAAMzB,EAAjB,YAAsByB,EAAtB,GAGF,IAAMC,EAAY/B,KAAA,IAChBgC,EAAYL,EADI,GAEhBK,EAAYN,EAFd,IAIMO,EAAsBF,EAAA,EAA5B,EACMG,EAAiBD,EAAsBF,EAAH,EAA1C,EAEMI,EAASC,EAAOT,EAAMG,EAA5B,GACMO,EAAQD,EAAOV,EAAMI,EAA3B,GAEA,iBAAWK,EAAO9B,EAAlB,YAAuB8B,EAAO3B,EAA9B,YAAmCsB,EAAMzB,EAAzC,YAA8CyB,EAAMtB,EAApD,YAAyD6B,EAAMhC,EAA/D,YAAoEgC,EAApE,MApBJ,KADA,KAwBCf,EAAO,IAAH,OAAOG,EAAIpB,EAAX,YAAgBM,EAASY,EAAT,EAAhB,QAzBP,ICmCa,cAAAe,EAAA,qBAQN,CACPC,KADO,aAGPC,cAHO,EAKPC,MAAO,CACLC,SADK,QAELC,iBAAkB,CAChBC,KADgB,OAEhBC,QAAS,KAEXC,eAAgB,CACdF,KADc,OAEdC,QAAS,QAEXE,cAAe,CACbH,KADa,QAEbC,SAAS,GAEXG,MAAO,CACLJ,KADK,OAELC,QAAS,WAEXvB,KAAM,CACJsB,KADI,QAEJC,SAAS,GAEXI,SAAU,CACRL,KADQ,MAERC,QAAS,iBAAO,KAElBK,kBAAmB,CACjBN,KADiB,OAEjBO,UAAY,SAAAC,GAAD,MAAiB,CAAC,MAAO,SAAU,OAAQ,SAASC,SAF9C,IAGjBR,QAAS,OAEXlC,OAAQ,CACNiC,KAAM,CAACU,OADD,QAENT,QAAS,IAEXU,OAAQ,CACNX,KADM,MAENC,QAAS,iBAAO,KAElBW,UAAW,CACTZ,KAAM,CAACa,OADE,QAETZ,QAAS,GAEXa,UAAW,CACTd,KAAM,CAACU,OADE,QAETT,QAAS,GAEXc,QAAS,CACPf,KAAM,CAACU,OADA,QAEPT,QAAS,GAEXe,WAnDK,QAoDLC,OAAQ,CACNjB,KAAM,CAACkB,QAASL,OADV,QAENZ,SAAS,GAEXD,KAAM,CACJA,KADI,OAEJC,QAFI,QAGJM,UAAY,SAAAC,GAAD,MAAiB,CAAC,QAAS,OAAOC,SAASD,KAExD3C,MAAO,CACLmC,KADK,MAELC,QAAS,iBAAO,KAElBkB,MAAO,CACLnB,KAAM,CAACa,OADF,QAELZ,QAAS,MAIbmB,KAAM,iBAAO,CACXC,WAAY,IAGdC,SAAU,CACRC,cADQ,WAEN,OAAOV,OAAOW,KAAd,UAEFC,YAJQ,WAKN,OAAOZ,OAAOW,KAAd,QAEFE,aAPQ,WAQN,OAAO1D,SAASwD,KAAD,OAAf,KAEFG,gBAVQ,WAWN,OAAO3D,SAASwD,KAAD,UAAR,KAAP,GAEFI,YAbQ,WAcN,IAAI7D,EAASyD,KAAb,aAIA,OAFIA,KAAJ,YAAoBzD,GAAA,IAAUC,SAASwD,KAAD,UAAR,KAE9B,GAEFK,WApBQ,WAqBN,IAAIV,EAAQK,KAAZ,YAGA,MAFA,QAAIA,KAAKxB,OAAgBmB,EAAQ/D,KAAA,IAASoE,KAAK3D,MAAMU,OAASiD,KAA7B,WAARL,IAEzB,GAEFlE,YA1BQ,WA2BN,OAAOuE,KAAK3D,MAAZ,QAEFiE,WA7BQ,WA8BN,GAAIN,KAAKrB,eAAT,UAA0BqB,KAAKxB,KAAkB,CAC/C,IAAM+B,EAAeP,KAAKD,eAAiBC,KAAKvE,YAAhD,GACA,OAAQuE,KAAKC,YAAN,GAAoCD,KAA3C,YAEA,OAAOQ,WAAWR,KAAX,YAAP,GAGJS,SArCQ,WAsCN,WAAIT,KAAKxB,KAAgB,MAAO,CAAEtC,KAAF,EAAWH,KAAMiE,KAAjB,WAAkCU,KAAlC,EAA2ClF,KAAMwE,KAAKE,cAEtF,IAAMX,EAAUS,KAAhB,cAEA,MAAO,CACL9D,KADK,EAELH,KAAMiE,KAAKK,WAFN,EAGLK,KAHK,EAILlF,KAAMwE,KAAKE,aAAeX,IAG9BoB,UAjDQ,WAkDN,OAAOjB,QACLM,KAAKR,YACLQ,KAAKb,OAAOpC,OADZ,GAEAiD,KAAKY,aAHP,QAMFC,aAxDQ,WA6DN,IAJA,IAAM1B,EAAN,GACM/B,EAAS4C,KAAf,QACMc,EAAM1D,EAAZ,OAES2D,EAAT,EAAgB5B,EAAA,OAAhB,EAAqC4B,IAAK,CACxC,IAAMC,EAAO5D,EAAb,GACIf,EAAQ2D,KAAKb,OAAjB,GAEA,IACE9C,EAAQ,6BACJ2E,EADI,MAAR,GAKF7B,EAAA,KAAY,CACVlD,EAAG+E,EADO,EAEV3E,MAAO6C,OAAO7C,KAIlB,UAEF4E,iBA/EQ,WAgFN,OAAOjB,KAAK3D,MAAM6E,KAAI,SAAAF,GAAI,MAAqB,kBAATA,EAAoBA,EAAOA,EAAjE,UAEFG,QAlFQ,WAmFN,MAAqB,UAAdnB,KAAKxB,KAAmB4C,EAAUpB,KAAD,iBAAwBA,KAAzD,UAA0E,EAAQA,KAAD,iBAAwBA,KAAhH,WAEFqB,MArFQ,WAsFN,IAAIjF,EAAI4D,KAAR,aAEA,MADA,UAAIA,KAAKxB,OAAkBpC,GAAA,GAC3B,GAEFkF,QA1FQ,WA2FN,OAAuB,IAAhBtB,KAAKP,OAAkB,EAAIJ,OAAOW,KAAzC,UAIJuB,MAAO,CACLlF,MAAO,CACLmF,WADK,EAELC,QAFK,WAEE,WACLzB,KAAA,WAAe,WACb,GACG,EAAD,kBACA,QACC,QAHH,MAMA,IAAM0B,EAAO,QAAb,KACM3E,EAAS2E,EAAf,iBAEK,EAAL,MAQEA,EAAA,sCACAA,EAAA,wBACAA,EAAA,4BACAA,EAAA,wBACAA,EAAA,qCAAqC,EAAKnD,iBAA1C,cAAgE,EAAhE,gBACAmD,EAAA,8BAZAA,EAAA,wBACAA,EAAA,sBAA6B3E,EAAA,IAA7B,EACA2E,EAAA,uBAA8B9F,KAAA,IAASmB,GAAU,cAAnB,IAA9B,WACA2E,EAAA,wBACAA,EAAA,6CAA6C,EAAKnD,iBAAlD,cAAwE,EAAxE,gBACAmD,EAAA,4BASF,sBAMRC,QAAS,CACPC,YADO,WACI,WACH9C,EAAoBkB,KAA1B,kBACMnB,EAAWmB,KAAKnB,SAFb,QAMJA,EAAL,QAAsBA,EAAA,SAEtB,IAAMiC,EAAMlF,KAAA,IAASiD,EAAA,OAAT,EAAZ,GACMgD,EAAQhD,EAAA,eAAuB,qBACnC,wBAA4B,CAC1BiD,MAAO,CACLC,OAAQ5F,EADH,EAEL,aAAcyC,GAAS,qBAK7B,OAAOoB,KAAKgC,eAAe,OAAQ,CACjChC,KAAKgC,eAAe,iBAAkB,CACpCF,MAAO,CACLG,GAAIjC,KADC,KAELkC,cAFK,iBAGLC,GAAI,SAAArD,EAAA,OAHC,IAILsD,GAAI,QAAAtD,EAAA,OAJC,IAKLuD,GAAI,UAAAvD,EAAA,OALC,IAMLwD,GAAI,WAAAxD,EAAA,OAA0C,MARpD,MAaFyD,KAhCO,SAgCH,GACF,OAAOvC,KAAKgC,eAAe,IAAK,CAC9BQ,MAAO,CACLC,SADK,IAELC,WAFK,SAGLC,iBAHK,eAILzF,KAAM,iBALV,IASF0F,QA1CO,WA2CL,IAAMxF,EAASgE,EAAUpB,KAAD,iBAAwBA,KAAhD,UAEA,OAAOA,KAAKgC,eAAe,OAAQ,CACjCF,MAAO,CACLe,EAAG,EAAQzF,EAAQ4C,KAAT,QAAuBA,KAAvB,KAAkCA,KADvC,cAEL9C,KAAM8C,KAAK9C,KAAO,QAAZ,OAAoB8C,KAApB,UAFD,OAGL8C,OAAQ9C,KAAK9C,KAAO,OAAS,QAArB,OAA6B8C,KAAK+C,KAAlC,MAEVC,IAAK,UAGTC,UAtDO,SAsDE,GAAiB,WAClBC,EAAWlD,KAAKa,aAAaK,KAAI,qBACrC,wBAA4B,CAC1BY,MAAO,CACL7F,EAAG+E,EAAA,IAAmB,aADjB,EAEL5E,EAAG,QAFE,IAEY,kBACjB,YAAaiD,OAAO,EAAP,YAA0B,IAExC,CAAC,aAPN,QAUA,OAAOW,KAAKuC,KAAZ,IAEFY,SAnEO,SAmEC,KACN,OAAOnD,KAAKY,aAAawC,MACrBpD,KAAKY,aAAawC,MAAM,CAAEjH,QAAOE,MAAO2E,EAAK3E,QAC7C2E,EAFJ,OAIFqC,QAxEO,WAyEL,GAAKrD,KAAD,SAAeA,KAAKvE,YAAxB,IAEA,IAAM6H,EAAO,EAAQtD,KAAD,iBAAwBA,KAA5C,UACMuD,GAAW3H,KAAA,IAAS0H,EAAA,KAAYA,EAAA,GAArB,GAAkCtD,KAAnC,YAAhB,EAEA,OAAOA,KAAKgC,eAAe,MAAO,CAChCF,MAAO,CACL0B,QADK,QAELC,QAAS,OAAF,OAASzD,KAAKK,WAAd,YAA4BL,KAAKI,eAEzC,CACDJ,KADC,cAEDA,KAAK0D,YAAYJ,EAAMC,EAASvD,KAAhC,WAAiD,iBAAmBA,KAFnE,MAGDA,KAAKW,UAAYX,KAAKiD,UAAtB,QAHC,EAIDjD,KAAKgC,eAAe,IAAK,CACvBF,MAAO,CACL,yCAAmC9B,KAD9B,KACL,UACA9C,KAAM,QAAF,OAAU8C,KAAK+C,KAAf,OAEL,CACD/C,KAAKgC,eAAe,OAAQ,CAC1BF,MAAO,CACL7F,EADK,EAELG,EAFK,EAGLuD,MAAOK,KAHF,WAILzD,OAAQyD,KAAKzD,gBAMvBmH,YAxGO,SAwGI,SAA6D,WAChEC,EAAW,kBAAO3D,KAAP,OACbA,KADa,OAEbA,KAAKP,OAAS,EAFlB,EAIA,OAAOO,KAAKgC,eAAe,WAAY,CACrCF,MAAO,CACLG,GAAI,GAAF,OAAKA,EAAL,WAEHqB,EAAA,KAAS,SAAAtC,GACV,OAAO,wBAA4B,CACjCc,MAAO,CACL7F,EAAG+E,EAAA,EADE,EAEL5E,EAAG4E,EAFE,EAGLrB,MAHK,EAILpD,OAAQyE,EAJH,OAKL4C,GALK,EAMLC,GAAIF,IAEL,CACD,WAAgB,2BAA+B,CAC7C7B,MAAO,CACLgC,cADK,SAELhH,KAFK,EAGLD,GAAImE,EAHC,OAIL+C,IAAK,GAAF,OAAK,EAJH,iBAIF,MACH7G,KAAM,iBAhBZ,SAsBJ8G,SAxIO,WAyIL,OAAOhE,KAAKgC,eAAe,MAAOhC,KAAKiE,aAAajE,KAAlB,MAA8B,CAC9D8B,MAAO,iCACF9B,KADE,QAAF,IAEHwD,QAFK,QAGL,eAAgBxD,KAAKM,YAHhB,EAILmD,QAAS,OAAF,OAASzD,KAAKL,MAAd,YAAuBK,KAAKI,iBAEnC,CACFJ,KADE,cAEFA,KAAKW,WAAaX,KAAKiD,WAAYjD,KAAKM,WAFtC,GAGFN,KAVF,cAeJkE,OA1WO,SA0WD,GACJ,KAAIlE,KAAKvE,YAAT,GAEA,MAAqB,UAAduE,KAAKxB,KAAmBwB,KAAxB,WAA0CA,KAAjD,c,2CClaJ,IAAIkE,EAAS,WAAa,IAAIC,EAAInE,KAASoE,EAAGD,EAAInC,eAAmBqC,EAAGF,EAAIG,MAAMD,IAAID,EAAG,OAAOC,EAAG,SAAS,CAACvC,MAAM,CAAC,KAAO,GAAG,YAAY,MAAM,MAAQ,mBAAmB,CAACuC,EAAG,cAAc,CAACA,EAAG,UAAU,CAACvC,MAAM,CAAC,MAAQ,uBAAuB,CAACuC,EAAG,cAAc,CAACvC,MAAM,CAAC,OAASqC,EAAIhF,OAAO,MAAQgF,EAAI9H,MAAM,MAAQ,QAAQ,aAAa,IAAI,QAAU,KAAK,OAAS,MAAM,OAAS,GAAG,iBAAiB,YAAY,IAAI,GAAGgI,EAAG,cAAc,CAACE,YAAY,eAAe,CAACF,EAAG,MAAM,CAACE,YAAY,4BAA4B,CAACJ,EAAIK,GAAG,6BAA6B,IACliBC,EAAkB,GC6BtB,GACA,qBACA,uBACA,QACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,OAEA,OACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QCnDsW,I,6FCQlWC,EAAY,eACd,EACAR,EACAO,GACA,EACA,KACA,WACA,MAIa,aAAAC,EAAiB,QAQhC,IAAkBA,EAAW,CAACC,QAAA,KAAMC,UAAA,OAAUC,SAAA,KAAOC,aAAA,Q,oCC3BrD,oKAGMC,EAAe,eAArB,mBACMC,EAAgB,eAAtB,oBACMJ,EAAY,eAAlB,gBACMK,EAAa,eAAnB,iBAYI","file":"js/chunk-4ea6ec1e.e35d92c9.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserSparkline.vue?vue&type=style&index=0&id=705693e4&scoped=true&lang=css&\"","import { Point, Boundary, Bar } from '../VSparkline'\n\nexport function genPoints (\n  values: number[],\n  boundary: Boundary\n): Point[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  const maxValue = Math.max(...values)\n  const minValue = Math.min(...values)\n\n  const gridX = (maxX - minX) / (totalValues - 1)\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n\n  return values.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y: maxY - (value - minValue) * gridY,\n      value,\n    }\n  })\n}\n\nexport function genBars (\n  values: number[],\n  boundary: Boundary\n): Bar[] {\n  const { minX, maxX, minY, maxY } = boundary\n  const totalValues = values.length\n  let maxValue = Math.max(...values)\n  let minValue = Math.min(...values)\n\n  if (minValue > 0) minValue = 0\n  if (maxValue < 0) maxValue = 0\n\n  const gridX = maxX / totalValues\n  const gridY = (maxY - minY) / ((maxValue - minValue) || 1)\n  const horizonY = maxY - Math.abs(minValue * gridY)\n\n  return values.map((value, index) => {\n    const height = Math.abs(gridY * value)\n\n    return {\n      x: minX + index * gridX,\n      y: horizonY - height +\n        +(value < 0) * height,\n      height,\n      value,\n    }\n  })\n}\n","import { Point } from '../VSparkline'\n\nfunction int (value: string | number): number {\n  return parseInt(value, 10)\n}\n\n/**\n * https://en.wikipedia.org/wiki/Collinearity\n * x=(x1+x2)/2\n * y=(y1+y2)/2\n */\nexport function checkCollinear (p0: Point, p1: Point, p2: Point): boolean {\n  return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y)\n}\n\nexport function getDistance (p1: Point, p2: Point): number {\n  return Math.sqrt(\n    Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)\n  )\n}\n\nexport function moveTo (to: Point, from: Point, radius: number) {\n  const vector = { x: to.x - from.x, y: to.y - from.y }\n  const length = Math.sqrt((vector.x * vector.x) + (vector.y * vector.y))\n  const unitVector = { x: vector.x / length, y: vector.y / length }\n\n  return {\n    x: from.x + unitVector.x * radius,\n    y: from.y + unitVector.y * radius,\n  }\n}\n","import { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n","// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            gradientUnits: 'userSpaceOnUse',\n            x1: gradientDirection === 'left' ? '100%' : '0',\n            y1: gradientDirection === 'top' ? '100%' : '0',\n            x2: gradientDirection === 'right' ? '100%' : '0',\n            y2: gradientDirection === 'bottom' ? '100%' : '0',\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"dark\":\"\",\"max-width\":\"500\",\"color\":\"blue lighten-1\"}},[_c('v-card-text',[_c('v-sheet',{attrs:{\"color\":\"rgba(0, 0, 0, .12)\"}},[_c('v-sparkline',{attrs:{\"labels\":_vm.labels,\"value\":_vm.value,\"color\":\"white\",\"line-width\":\"2\",\"padding\":\"16\",\"height\":\"100\",\"smooth\":\"\",\"stroke-linecap\":\"round\"}})],1)],1),_c('v-card-text',{staticClass:\"text-center\"},[_c('div',{staticClass:\"text-h5 font-weight-thin\"},[_vm._v(\" User Registrations \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<v-card\n\t\tdark\n\t\tmax-width=\"500\"\n\t\tcolor=\"blue lighten-1\"\n\t>\n\t\t<v-card-text>\n\t\t\t<v-sheet color=\"rgba(0, 0, 0, .12)\">\n\t\t\t\t<v-sparkline\n\t\t\t\t\t:labels=\"labels\"\n\t\t\t\t\t:value=\"value\"\n\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\tline-width=\"2\"\n\t\t\t\t\tpadding=\"16\"\n\t\t\t\t\theight=\"100\"\n\t\t\t\t\tsmooth\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t/>\n\t\t\t</v-sheet>\n\t\t</v-card-text>\n\n\t\t<v-card-text class=\"text-center\">\n\t\t\t<div class=\"text-h5 font-weight-thin\">\n\t\t\t\tUser Registrations\n\t\t\t</div>\n\t\t</v-card-text>\n\t</v-card>\n</template>\n\n<script>\nexport default {\n\tname: \"UserSparkline\",\n\tdata: () => ({\n\t\tlabels: [\n\t\t\t\"12am\",\n\t\t\t\"3am\",\n\t\t\t\"6am\",\n\t\t\t\"9am\",\n\t\t\t\"12pm\",\n\t\t\t\"3pm\",\n\t\t\t\"6pm\",\n\t\t\t\"9pm\",\n\t\t],\n\t\tvalue: [\n\t\t\t200,\n\t\t\t675,\n\t\t\t410,\n\t\t\t390,\n\t\t\t310,\n\t\t\t460,\n\t\t\t250,\n\t\t\t240,\n\t\t],\n\t}),\n}\n</script>\n\n<style scoped>\n.v-sheet--offset {\n\ttop: -24px;\n\tposition: relative;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserSparkline.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserSparkline.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserSparkline.vue?vue&type=template&id=705693e4&scoped=true&\"\nimport script from \"./UserSparkline.vue?vue&type=script&lang=js&\"\nexport * from \"./UserSparkline.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserSparkline.vue?vue&type=style&index=0&id=705693e4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"705693e4\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VSheet } from 'vuetify/lib/components/VSheet';\nimport { VSparkline } from 'vuetify/lib/components/VSparkline';\ninstallComponents(component, {VCard,VCardText,VSheet,VSparkline})\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n"],"sourceRoot":""}