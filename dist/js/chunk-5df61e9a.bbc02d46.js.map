{"version":3,"sources":["webpack:///./src/mixins/Snack.js","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VList/VList.ts","webpack:///../../../src/mixins/bootable/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VList/VListItem.ts"],"names":["Snack","methods","openSnack","text","color","$store","dispatch","name","props","valueComparator","type","default","provide","isInList","list","this","inject","isInMenu","isInNav","dense","disabled","expand","flat","nav","rounded","subheader","threeLine","twoLine","Boolean","data","groups","computed","classes","register","unregister","index","findIndex","g","content","splice","listClick","group","render","staticClass","class","style","attrs","role","attrs$","h","setBackgroundColor","$slots","eager","isBooted","hasContent","watch","isActive","created","showLazyContent","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","length","currentRange","selectedItem","getText","internalSearch","allItems","value","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","internalValue","isFocused","document","$refs","input","isMenuActive","val","oldVal","activateMenu","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","e","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event","active","activeClass","chipGroup","close","closeIcon","closeLabel","draggable","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","breakingProps","original","replacement","click","genFilter","children","$createElement","left","genClose","right","size","$vuetify","lang","t","on","genContent","tabindex","setTextColor","baseMixins","directives","Ripple","isInGroup","inheritAttrs","listItemGroup","inactive","selectable","themeClasses","$attrs","hasOwnProperty","$el","blur","genAttrs","to","keydown","$scopedSlots","toggle"],"mappings":"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","file":"js/chunk-5df61e9a.bbc02d46.js","sourcesContent":["const Snack = {\n\tmethods: {\n\t\tasync openSnack(text, color=\"error\") {\n\t\t\tawait this.$store.dispatch(\"snack/setSnackState\", true)\n\t\t\tawait this.$store.dispatch(\"snack/setSnackColor\", color)\n\t\t\tawait this.$store.dispatch(\"snack/setSnackText\", text)\n\t\t},\n\t}\n}\n\nexport default Snack\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Styles\nimport './VList.sass'\nimport VListGroup from './VListGroup'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VListGroupInstance = InstanceType<typeof VListGroup>\n\ninterface options extends InstanceType<typeof VSheet> {\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default VSheet.extend<options>().extend({\n  name: 'v-list',\n\n  provide (): object {\n    return {\n      isInList: true,\n      list: this,\n    }\n  },\n\n  inject: {\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    expand: Boolean,\n    flat: Boolean,\n    nav: Boolean,\n    rounded: Boolean,\n    subheader: Boolean,\n    threeLine: Boolean,\n    twoLine: Boolean,\n  },\n\n  data: () => ({\n    groups: [] as VListGroupInstance[],\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-list--dense': this.dense,\n        'v-list--disabled': this.disabled,\n        'v-list--flat': this.flat,\n        'v-list--nav': this.nav,\n        'v-list--rounded': this.rounded,\n        'v-list--subheader': this.subheader,\n        'v-list--two-line': this.twoLine,\n        'v-list--three-line': this.threeLine,\n      }\n    },\n  },\n\n  methods: {\n    register (content: VListGroupInstance) {\n      this.groups.push(content)\n    },\n    unregister (content: VListGroupInstance) {\n      const index = this.groups.findIndex(g => g._uid === content._uid)\n\n      if (index > -1) this.groups.splice(index, 1)\n    },\n    listClick (uid: number) {\n      if (this.expand) return\n\n      for (const group of this.groups) {\n        group.toggle(uid)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-list',\n      class: this.classes,\n      style: this.styles,\n      attrs: {\n        role: this.isInNav || this.isInMenu ? undefined : 'list',\n        ...this.attrs$,\n      },\n    }\n\n    return h(this.tag, this.setBackgroundColor(this.color, data), [this.$slots.default])\n  },\n})\n","// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropType, PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'option'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n        attrs.id = attrs.id || `list-item-${this._uid}`\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data[this.to ? 'nativeOn' : 'on'] = {\n      ...data[this.to ? 'nativeOn' : 'on'],\n      keydown: (e: KeyboardEvent) => {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    if (this.inactive) tag = 'div'\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn\n      delete data.nativeOn\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    return h(tag, this.setTextColor(this.color, data), children)\n  },\n})\n"],"sourceRoot":""}