{"version":3,"sources":["webpack:///./node_modules/vuetify-loader/lib/runtime/installDirectives.js","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VList/VList.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/components/VList/VListItem.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["module","exports","component","directives","options","extendOptions","i","name","props","valueComparator","type","default","provide","isInList","list","this","inject","isInMenu","isInNav","dense","disabled","expand","flat","nav","rounded","subheader","threeLine","twoLine","Boolean","data","groups","computed","classes","methods","register","unregister","index","findIndex","g","content","splice","listClick","group","render","staticClass","class","style","attrs","role","attrs$","h","setBackgroundColor","$slots","inset","vertical","$attrs","orientation","themeClasses","on","$listeners","baseMixins","Ripple","isInGroup","inheritAttrs","activeClass","listItemGroup","inactive","link","selectable","tag","value","proxyClass","isClickable","created","hasOwnProperty","click","e","$el","blur","genAttrs","tabindex","String","to","keydown","children","$scopedSlots","active","toggle","setTextColor","ripple","genRipple","center","$createElement","mixins","model","prop","event","id","inputValue","falseValue","trueValue","multiple","label","hasColor","lazyValue","computedColor","isDark","isMultiple","Array","isActive","input","item","undefined","isDirty","rippleState","watch","genLabel","VInput","prevent","genInput","Object","domProps","checked","change","focus","ref","onBlur","onClick","onChange","length","onFocus","onKeydown"],"mappings":"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","file":"js/chunk-6fa94ac1.c87e66e3.js","sourcesContent":["// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function installDirectives (component, directives) {\n  var options = typeof component.exports === 'function'\n    ? component.exports.extendOptions\n    : component.options\n\n  if (typeof component.exports === 'function') {\n    options.directives = component.exports.options.directives\n  }\n\n  options.directives = options.directives || {}\n\n  for (var i in directives) {\n    options.directives[i] = options.directives[i] || directives[i]\n  }\n}\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Styles\nimport './VList.sass'\nimport VListGroup from './VListGroup'\n\n// Components\nimport VSheet from '../VSheet/VSheet'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VListGroupInstance = InstanceType<typeof VListGroup>\n\ninterface options extends InstanceType<typeof VSheet> {\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default VSheet.extend<options>().extend({\n  name: 'v-list',\n\n  provide (): object {\n    return {\n      isInList: true,\n      list: this,\n    }\n  },\n\n  inject: {\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  props: {\n    dense: Boolean,\n    disabled: Boolean,\n    expand: Boolean,\n    flat: Boolean,\n    nav: Boolean,\n    rounded: Boolean,\n    subheader: Boolean,\n    threeLine: Boolean,\n    twoLine: Boolean,\n  },\n\n  data: () => ({\n    groups: [] as VListGroupInstance[],\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-list--dense': this.dense,\n        'v-list--disabled': this.disabled,\n        'v-list--flat': this.flat,\n        'v-list--nav': this.nav,\n        'v-list--rounded': this.rounded,\n        'v-list--subheader': this.subheader,\n        'v-list--two-line': this.twoLine,\n        'v-list--three-line': this.threeLine,\n      }\n    },\n  },\n\n  methods: {\n    register (content: VListGroupInstance) {\n      this.groups.push(content)\n    },\n    unregister (content: VListGroupInstance) {\n      const index = this.groups.findIndex(g => g._uid === content._uid)\n\n      if (index > -1) this.groups.splice(index, 1)\n    },\n    listClick (uid: number) {\n      if (this.expand) return\n\n      for (const group of this.groups) {\n        group.toggle(uid)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-list',\n      class: this.classes,\n      style: this.styles,\n      attrs: {\n        role: this.isInNav || this.isInMenu ? undefined : 'list',\n        ...this.attrs$,\n      },\n    }\n\n    return h(this.tag, this.setBackgroundColor(this.color, data), [this.$slots.default])\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropType, PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'listitem'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n        attrs.id = attrs.id || `list-item-${this._uid}`\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data[this.to ? 'nativeOn' : 'on'] = {\n      ...data[this.to ? 'nativeOn' : 'on'],\n      keydown: (e: KeyboardEvent) => {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    if (this.inactive) tag = 'div'\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn\n      delete data.nativeOn\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    return h(tag, this.setTextColor(this.color, data), children)\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}