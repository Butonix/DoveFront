{"version":3,"sources":["webpack:///../../../src/components/VProgressCircular/index.ts","webpack:///../../../src/components/VProgressCircular/VProgressCircular.ts","webpack:///../../../src/components/VItemGroup/VItemGroup.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/components/VBtn/VBtn.ts"],"names":["name","directives","intersect","props","button","indeterminate","rotate","type","Number","default","size","width","value","data","radius","isVisible","computed","calculatedSize","this","circumference","Math","classes","normalizedValue","parseFloat","strokeDashArray","strokeDashOffset","strokeWidth","styles","height","svgStyles","transform","viewBoxSize","methods","genCircle","$createElement","class","attrs","fill","cx","cy","r","offset","genSvg","children","style","xmlns","viewBox","genInfo","staticClass","$slots","onObserve","render","h","setTextColor","role","undefined","on","$listeners","BaseItemGroup","activeClass","mandatory","max","multiple","tag","internalLazyValue","items","themeClasses","selectedIndex","selectedItem","indexOf","selectedItems","filter","selectedValues","internalValue","Array","toggleMethod","v","watch","created","genData","getValue","item","i","onClick","register","index","push","unregister","valueIndex","updateInternalValue","updateItem","updateItemsState","updateMultiple","updateSingle","updateMandatory","defaultValue","val","isSame","provide","itemGroup","BaseSlideGroup","Resize","Touch","centerActive","nextIcon","prevIcon","showArrows","Boolean","validator","internalItemsLength","isOverflowing","resizeTimeout","startX","isSwipingHorizontal","isSwiping","scrollOffset","widths","content","wrapper","canTouch","window","__cachedNext","genTransition","__cachedPrev","hasAffixes","isMobile","hasNext","hasPrev","beforeUpdate","$children","updated","genNext","slot","$scopedSlots","next","click","key","genContent","ref","onResize","genIcon","icon","$vuetify","rtl","location","upperLocation","hasAffix","disabled","genPrev","prev","genWrapper","start","e","move","end","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","diffX","diffY","document","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","lastItemPosition","length","wrapperPosition","$refs","calculateCenteredOffset","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","setWidths","slideGroup","baseMixins","btnToggle","block","depressed","fab","loading","outlined","plain","retainFocusOnClick","rounded","text","tile","proxyClass","sizeableClasses","computedElevation","computedRipple","defaultRipple","circle","hasBg","isElevated","elevation","isRound","measurableStyles","breakingProps","original","replacement","$el","genLoader","loader","setColor","includes","JSON"],"mappings":"2IAAA,gBAGA,e,0GCae,qBAAiB,CAC9BA,KAD8B,sBAG9BC,WAAY,CAAEC,UAAA,QAEdC,MAAO,CACLC,OADK,QAELC,cAFK,QAGLC,OAAQ,CACNC,KAAM,CAACC,OADD,QAENC,QAAS,GAEXC,KAAM,CACJH,KAAM,CAACC,OADH,QAEJC,QAAS,IAEXE,MAAO,CACLJ,KAAM,CAACC,OADF,QAELC,QAAS,GAEXG,MAAO,CACLL,KAAM,CAACC,OADF,QAELC,QAAS,IAIbI,KAAM,iBAAO,CACXC,OADW,GAEXC,WAAW,IAGbC,SAAU,CACRC,eADQ,WAEN,OAAOT,OAAOU,KAAP,OAAqBA,KAAKd,OAAS,EAA1C,IAGFe,cALQ,WAMN,OAAO,EAAIC,KAAJ,GAAcF,KAArB,QAGFG,QATQ,WAUN,MAAO,CACL,+BAAgCH,KAD3B,UAEL,qCAAsCA,KAFjC,cAGL,8BAA+BA,KAAKd,SAIxCkB,gBAjBQ,WAkBN,OAAIJ,KAAKN,MAAT,EACE,EAGEM,KAAKN,MAAT,IACE,IAGKW,WAAWL,KAAlB,QAGFM,gBA7BQ,WA8BN,OAAOJ,KAAA,UAAWF,KAAKC,eAAvB,KAGFM,iBAjCQ,WAkCN,OAAS,IAAMP,KAAP,iBAAD,IAAuCA,KAAvC,cAAP,MAGFQ,YArCQ,WAsCN,OAAOlB,OAAOU,KAAP,QAAsBA,KAAtB,KAAkCA,KAAlC,YAAP,GAGFS,OAzCQ,WA0CN,MAAO,CACLC,OAAQ,eAAcV,KADjB,gBAELP,MAAO,eAAcO,KAAD,kBAIxBW,UAhDQ,WAiDN,MAAO,CACLC,UAAW,UAAF,OAAYtB,OAAOU,KAAD,QAAlB,UAIba,YAtDQ,WAuDN,OAAOb,KAAKJ,QAAU,EAAIN,OAAOU,KAAP,QAAsBA,KAAhD,QAIJc,QAAS,CACPC,UADO,SACE,KACP,OAAOf,KAAKgB,eAAe,SAAU,CACnCC,MAAO,wBAAF,OAD8B,GAEnCC,MAAO,CACLC,KADK,cAELC,GAAI,EAAIpB,KAFH,YAGLqB,GAAI,EAAIrB,KAHH,YAILsB,EAAGtB,KAJE,OAKL,eAAgBA,KALX,YAML,mBAAoBA,KANf,gBAOL,oBAAqBuB,MAI3BC,OAfO,WAgBL,IAAMC,EAAW,CACfzB,KAAKb,eAAiBa,KAAKe,UAAU,WADtB,GAEff,KAAKe,UAAU,UAAWf,KAF5B,mBAKA,OAAOA,KAAKgB,eAAe,MAAO,CAChCU,MAAO1B,KADyB,UAEhCkB,MAAO,CACLS,MADK,6BAELC,QAAS,GAAF,OAAK5B,KAAKa,YAAV,YAAyBb,KAAKa,YAA9B,YAA6C,EAAIb,KAAKa,YAAtD,YAAqE,EAAIb,KAAKa,eAJzF,IAQFgB,QA7BO,WA8BL,OAAO7B,KAAKgB,eAAe,MAAO,CAChCc,YAAa,6BACZ9B,KAAK+B,OAFR,UAIFC,UAlCO,SAkCE,OACPhC,KAAA,cAIJiC,OAjI8B,SAiIxB,GACJ,OAAOC,EAAE,MAAOlC,KAAKmC,aAAanC,KAAlB,MAA8B,CAC5C8B,YAD4C,sBAE5CZ,MAAO,CACLkB,KADK,cAEL,gBAFK,EAGL,gBAHK,IAIL,gBAAiBpC,KAAKb,mBAAgBkD,EAAYrC,KAAKI,iBAEzDa,MAAOjB,KARqC,QAS5CjB,WAAY,CAAC,CACXD,KADW,YAEXY,MAAOM,KAAKgC,YAEdN,MAAO1B,KAbqC,OAc5CsC,GAAItC,KAAKuC,aACP,CACFvC,KADE,SAEFA,KAjBF,gB,4OC7HSwC,EAAgB,eAAO,EAAD,KAAN,eAGpB,CACP1D,KADO,kBAGPG,MAAO,CACLwD,YAAa,CACXpD,KADW,OAEXE,QAAS,kBAEXmD,UALK,QAMLC,IAAK,CACHtD,KAAM,CAACC,OADJ,QAEHC,QAAS,MAEXqD,SAVK,QAWLC,IAAK,CACHxD,KADG,OAEHE,QAAS,QAIbI,KApBO,WAqBL,MAAO,CAILmD,uBAAkCT,IAAfrC,KAAKN,MACpBM,KADe,MAEfA,KAAK4C,SAAW,QANf,EAOLG,MAAO,KAIXjD,SAAU,CACRK,QADQ,WAEN,uBACE,gBADK,GAEFH,KAAKgD,eAGZC,cAPQ,WAQN,OAAQjD,KAAKkD,cAAgBlD,KAAK+C,MAAMI,QAAQnD,KAAzC,gBAAP,GAEFkD,aAVQ,WAWN,IAAIlD,KAAJ,SAEA,OAAOA,KAAKoD,cAAZ,IAEFA,cAfQ,WAeK,WACX,OAAOpD,KAAK+C,MAAMM,QAAO,cACvB,OAAO,eAAkB,aAAzB,QAGJC,eApBQ,WAqBN,aAAItD,KAAKuD,cAA8B,GAEhCC,MAAA,QAAcxD,KAAd,eACHA,KADG,cAEH,CAACA,KAFL,gBAIFyD,aA3BQ,WA2BI,WACV,IAAKzD,KAAL,SACE,OAAQ,SAAA0D,GAAD,OAAY,kBAAnB,GAGF,IAAMH,EAAgBvD,KAAtB,cACA,OAAIwD,MAAA,QAAJ,GACU,SAAAE,GAAD,OAAYH,EAAA,SAAnB,IAGK,kBAAP,KAIJI,MAAO,CACLJ,cADK,mBAELR,MAAO,oBAGTa,QA9EO,WA+ED5D,KAAK4C,WAAaY,MAAA,QAAcxD,KAApC,gBACE,eAAY,oEAAZ,OAIJc,QAAS,CAEP+C,QAFO,WAGL,MAAO,CACL5C,MAAOjB,KAAKG,UAGhB2D,SAPO,SAOC,KACN,OAAO,MAAAC,EAAA,YAAsBA,EAAA,MAAtBC,EAEHD,EAFJ,OAIFE,QAZO,SAYA,GACLjE,KAAA,oBACEA,KAAK8D,SAASC,EAAM/D,KAAK+C,MAAMI,QADjC,MAIFe,SAjBO,SAiBC,GAAyB,WACzBC,EAAQnE,KAAK+C,MAAMqB,KAAKL,GAA9B,EAEAA,EAAA,cAAmB,kBAAM,UAHM,MAO3B/D,KAAK0C,YAAc1C,KAAKsD,eAA5B,QACEtD,KAAA,kBAGFA,KAAA,iBAEFqE,WA9BO,SA8BG,GACR,IAAIrE,KAAJ,cAEA,IAAMmE,EAAQnE,KAAK+C,MAAMI,QAAzB,GACMzD,EAAQM,KAAK8D,SAASC,EAA5B,GAEA/D,KAAA,kBAEA,IAAMsE,EAAatE,KAAKsD,eAAeH,QARN,GAWjC,KAAImB,EAAJ,IAGA,IAAKtE,KAAL,UACE,OAAOA,KAAKuE,oBAAZ,GAIEvE,KAAK4C,UAAYY,MAAA,QAAcxD,KAAnC,eACEA,KAAA,cAAqBA,KAAKuD,cAAcF,QAAO,SAAAK,GAAC,OAAIA,IAApD,KAEA1D,KAAA,qBAMGA,KAAKoD,cAAV,QACEpD,KAAA,uBAGJwE,WA9DO,SA8DG,KACR,IAAM9E,EAAQM,KAAK8D,SAASC,EAA5B,GAEAA,EAAA,SAAgB/D,KAAKyD,aAArB,IAGFgB,iBApEO,WAoES,WACdzE,KAAA,WAAe,WACb,GAAI,cACD,gBADH,OAGE,OAAO,EAAP,kBAMF,gBAAmB,EAAnB,gBAGJuE,oBAlFO,SAkFY,GACjBvE,KAAA,SACIA,KAAK0E,eADT,GAEI1E,KAAK2E,aAFT,IAIFC,gBAvFO,SAuFQ,GACb,GAAK5E,KAAK+C,MAAV,QAEA,IAAMA,EAAQ/C,KAAK+C,MAAnB,QAEA,GAAUA,EAAA,UAEV,IAAMgB,EAAOhB,EAAA,MAAW,SAAAgB,GAAI,OAAKA,EAPJ,YAW7B,MAEA,IAAMI,EAAQnE,KAAK+C,MAAMI,QAAzB,GAEAnD,KAAA,oBACEA,KAAK8D,SAASC,EADhB,OAIFW,eA1GO,SA0GO,GACZ,IAAMG,EAAerB,MAAA,QAAcxD,KAAd,eACjBA,KADiB,cAArB,GAGMuD,EAAgBsB,EAAtB,QACMV,EAAQZ,EAAA,WAAwB,SAAAuB,GAAG,OAAIA,IAA7C,KAGE9E,KAAK0C,WAELyB,GAFA,GAIAZ,EAAA,SALF,GAUE,MAAAvD,KAAA,KAEAmE,EAFA,GAIAZ,EAAA,SAA2BvD,KAN7B,MASAmE,GAAA,EACIZ,EAAA,SADJ,GAEIA,EAAA,KAFJ,GAIAvD,KAAA,kBAEF2E,aAxIO,SAwIK,GACV,IAAMI,EAASrF,IAAUM,KAAzB,cAEIA,KAAK0C,WAAT,IAEA1C,KAAA,cAAqB+E,OAAS1C,EAA9B,KAIJJ,OArOO,SAqOD,GACJ,OAAOC,EAAElC,KAAD,IAAWA,KAAX,UAA2BA,KAAK+B,OAAxC,YAIWS,EAAA,OAAqB,CAClC1D,KADkC,eAGlCkG,QAHkC,WAIhC,MAAO,CACLC,UAAWjF,U,6OC5NJkF,EAAiB,eAAM,OAAN,eAWrB,CACPpG,KADO,mBAGPC,WAAY,CACVoG,OAAA,OACAC,MAAA,QAGFnG,MAAO,CACLwD,YAAa,CACXpD,KADW,OAEXE,QAAS,wBAEX8F,aALK,QAMLC,SAAU,CACRjG,KADQ,OAERE,QAAS,SAEXgG,SAAU,CACRlG,KADQ,OAERE,QAAS,SAEXiG,WAAY,CACVnG,KAAM,CAACoG,QADG,QAEVC,UAAW,SAAAhC,GAAC,MACG,mBAANA,GAAmB,CAAC,SAAD,mCAShC/D,KAAM,iBAAO,CACXgG,oBADW,EAEXC,eAFW,EAGXC,cAHW,EAIXC,OAJW,EAKXC,qBALW,EAMXC,WANW,EAOXC,aAPW,EAQXC,OAAQ,CACNC,QADM,EAENC,QAAS,KAIbtG,SAAU,CACRuG,SADQ,WAEN,2BAAcC,QAEhBC,aAJQ,WAKN,OAAOvG,KAAKwG,cAAZ,SAEFC,aAPQ,WAQN,OAAOzG,KAAKwG,cAAZ,SAEFrG,QAVQ,WAWN,wCACK,qCADE,OAAP,IAEE,iBAFK,EAGL,6BAA8BH,KAHzB,WAIL,gCAAiCA,KAAK4F,iBAG1Cc,WAlBQ,WAmBN,OAAQ1G,KAAR,YAEE,aAAe,SAGf,cAAgB,OAAQA,KAAR,SAIhB,OAAW,OAAOA,KAAK4F,eAAiB1F,KAAA,IAASF,KAAT,cAA7B,EAGX,aAAe,OACbA,KAAK2G,UACJ3G,KAAK4F,eAAiB1F,KAAA,IAASF,KAAT,cAFV,EAQf,QAAS,OACNA,KAAD,WACCA,KAAK4F,eAAiB1F,KAAA,IAASF,KAAT,cAFhB,KAMb4G,QA7CQ,WA8CN,IAAK5G,KAAL,WAAsB,OAAO,EAE7B,MAA6BA,KAHxB,OAGC,EAAN,EAAM,QAAWoG,EAAjB,EAAiBA,QAGjB,OAAOD,EAAUjG,KAAA,IAASF,KAAT,cAAjB,GAEF6G,QArDQ,WAsDN,OAAO7G,KAAK0G,YAAZ,IAA0B1G,KAAKiG,eAInCtC,MAAO,CACLJ,cADK,YAKLqC,cALK,YAMLK,aANK,SAMO,GACVjG,KAAA,+DAIJ8G,aArHO,WAsHL9G,KAAA,qBAA4BA,KAAK+G,WAAN,IAA3B,QAGFC,QAzHO,WA0HDhH,KAAK2F,uBAAyB3F,KAAK+G,WAAN,IAAjC,QACA/G,KAAA,aAGFc,QAAS,CAEPmG,QAFO,WAEA,WACCC,EAAOlH,KAAKmH,aAAaC,KAC3BpH,KAAKmH,aAAaC,KADT,IAETpH,KAAK+B,OAAOqF,MAAQpH,KAFxB,aAIA,OAAOA,KAAKgB,eAAe,MAAO,CAChCc,YADgC,sBAEhCb,MAAO,CACL,iCAAkCjB,KAAK4G,SAEzCtE,GAAI,CACF+E,MAAO,kBAAM,yBAEfC,IAAK,QACJ,CATH,KAWFC,WAlBO,WAmBL,OAAOvH,KAAKgB,eAAe,MAAO,CAChCc,YADgC,yBAEhC0F,IAAK,WACJxH,KAAK+B,OAHR,UAKF8B,QAxBO,WAyBL,MAAO,CACL5C,MAAOjB,KADF,QAELjB,WAAY,CAAC,CACXD,KADW,SAEXY,MAAOM,KAAKyH,aAIlBC,QAjCO,SAiCA,GACL,IAAIC,EAAJ,EAEI3H,KAAK4H,SAASC,KAAlB,SAAyBC,EACvBH,EAAA,OACS3H,KAAK4H,SAASC,KAAlB,SAAyBC,IAC9BH,EAAA,QAGF,IAAMI,EAAgB,GAAH,OAAMD,EAAA,kBAAN,OAAkCA,EAAA,MAArD,IACME,EAAYhI,KAAA,aAAlB,IAEA,OACGA,KAAD,YADF,EAKOA,KAAKgB,eAAe,EAApB,KAA2B,CAChC/B,MAAO,CACLgJ,UAAWD,IAEXhI,KAAA,UAJJ,EAII,UANK,MASXkI,QAzDO,WAyDA,WACChB,EAAOlH,KAAKmH,aAAagB,KAC3BnI,KAAKmH,aAAagB,KADT,IAETnI,KAAK+B,OAAOoG,MAAQnI,KAFxB,aAIA,OAAOA,KAAKgB,eAAe,MAAO,CAChCc,YADgC,sBAEhCb,MAAO,CACL,iCAAkCjB,KAAK6G,SAEzCvE,GAAI,CACF+E,MAAO,kBAAM,yBAEfC,IAAK,QACJ,CATH,KAWFd,cAzEO,SAyEM,GACX,OAAOxG,KAAKgB,eAAe,EAApB,KAAqC,CAAChB,KAAK0H,QAAlD,MAEFU,WA5EO,WA4EG,WACR,OAAOpI,KAAKgB,eAAe,MAAO,CAChCc,YADgC,yBAEhC/C,WAAY,CAAC,CACXD,KADW,QAEXY,MAAO,CACL2I,MAAQ,SAAAC,GAAD,OAAmB,kBAAsB,EAD3C,eAELC,KAAO,SAAAD,GAAD,OAAmB,kBAAsB,EAF1C,cAGLE,IAAM,SAAAF,GAAD,OAAmB,kBAAsB,EAAtB,gBAG5Bd,IAAK,WACJ,CAACxH,KAXJ,gBAaFyI,mBA1FO,SA0FW,SAChB,IAAMC,EAAOb,GAAG,EAAhB,EACMc,EAAoBD,EAAA,GACvB,SAAAE,GAAA,EAAD,GAAkC1C,EADpC,QAGA,OAAOwC,EAAOxI,KAAA,IAASA,KAAA,MAA4BgG,EAAA,QAAiBA,EAAtD,SAAd,IAEF2C,aAjGO,SAiGK,GACV7I,KAAA,0BACAA,KAAA,aAEFyH,SArGO,WAuGDzH,KAAJ,cAEAA,KAAA,aAEF8I,aA3GO,SA2GK,GACV,IAAQ3C,EAAYnG,KAApB,MAAQmG,QAERnG,KAAA,OAAcA,KAAKiG,aAAeqC,EAAlC,YAEAnC,EAAA,uCACAA,EAAA,6CAEF4C,YAnHO,SAmHI,GACT,GAAK/I,KAAL,UAEA,IAAKA,KAAL,UAAqB,CAGnB,IAAMgJ,EAAQV,EAAA,WAAeA,EAA7B,YACMW,EAAQX,EAAA,WAAeA,EAA7B,YACAtI,KAAA,oBAA2BE,KAAA,OAAkBA,KAAA,IAA7C,GACAF,KAAA,aAGEA,KAAJ,sBAEEA,KAAA,aAAoBA,KAAK8F,OAASwC,EAFN,WAI5BY,SAAA,4CAGJC,WAtIO,WAuIL,GAAKnJ,KAAL,UAEA,MAA6BA,KAA7B,MAAM,EAAN,EAAM,QAAWoG,EAAjB,EAAiBA,QACXgD,EAAkBjD,EAAA,YAAsBC,EAA9C,YAEAD,EAAA,qCACAA,EAAA,qCAEInG,KAAK4H,SAAT,IAEM5H,KAAKiG,aAAe,IAAMjG,KAA9B,cACEA,KAAA,eACSA,KAAKiG,eAAT,IACLjG,KAAA,iBAIEA,KAAKiG,aAAe,IAAMjG,KAA9B,cACEA,KAAA,eACSA,KAAKiG,cAAT,IACLjG,KAAA,gBAIJA,KAAA,WAzBQ,EA2BRkJ,SAAA,qDAEFG,cAnKO,SAmKM,KACXf,EAAA,kBACAtI,KAAA,eAAsBsJ,EAAtB,IAEFC,eAvKO,WAwKL,IAAKvJ,KAAD,cAAsBA,KAAK+C,MAA/B,OAA6C,CAC3C,IAAMyG,EAAmBxJ,KAAK+C,MAAM/C,KAAK+C,MAAM0G,OAAtB,OAAzB,wBACMC,EAAkB1J,KAAK2J,MAAMvD,QAAnC,yBAGGpG,KAAK4H,SAASC,KAAO6B,EAAA,MAAwBF,EAA9C,QACExJ,KAAK4H,SAAN,KAAsB8B,EAAA,KAAuBF,EAFhD,OAIExJ,KAAA,iBAICA,KAAL,eAKyB,IAAvBA,KAAKiD,gBACHjD,KAAD,eAAuBA,KAF1B,cAIEA,KAAA,eACSA,KAAJ,aACLA,KAAA,aAAoBA,KAAK4J,wBACvB5J,KAAKkD,aADa,IAElBlD,KAFkB,OAGlBA,KAAK4H,SAHP,KAKS5H,KAAJ,gBACLA,KAAA,aAAoBA,KAAK6J,uBACvB7J,KAAKkD,aADa,IAElBlD,KAFkB,OAGlBA,KAAK4H,SAHa,IAIlB5H,KAJF,iBAQJ6J,uBA5MO,SA4Me,SACpB,IAAMC,EAAcC,EAApB,YACMC,EAAanC,EACd3B,EAAA,QAAiB6D,EAAjB,WADiB,EAElBA,EAFJ,WAIA,IACEE,MAGF,IAAMC,EAAahE,EAAA,QAAnB,EACMiE,EAAaL,EAAnB,EACMM,EAAN,GAAyBN,EAQzB,OANIE,GAAJ,EACEC,EAAsB/J,KAAA,IAAS8J,EAAT,EAAtB,GACSE,GAAJ,IACLD,EAAsB/J,KAAA,IAAS+J,GAAuBC,EAAA,EAAhC,GAA6EhE,EAAA,QAAiBA,EAApH,UAGK2B,GAAG,EAAV,GAEF+B,wBAlOO,SAkOgB,OACrB,IAAM,EAAN,EAAM,WAAcE,EAApB,EAAoBA,YAEpB,KAAS,CACP,IAAMO,EAAiBnE,EAAA,UAA8B4D,EAA9B,EAAgD5D,EAAA,QAAvE,EACA,OAAQhG,KAAA,IAASgG,EAAA,QAAiBA,EAA1B,QAA0ChG,KAAA,MAAlD,IAEA,IAAM,EAAiB8J,EAAaF,EAAb,EAA+B5D,EAAA,QAAtD,EACA,OAAOhG,KAAA,IAASgG,EAAA,QAAiBA,EAA1B,QAA0ChG,KAAA,MAAjD,KAGJoK,SA7OO,SA6OC,GACNtK,KAAA,aAAoBA,KAAKyI,mBAAmBX,EAAU,CAEpD3B,QAASnG,KAAK2J,MAAMxD,QAAUnG,KAAK2J,MAAMxD,QAAhC,YAF2C,EAGpDC,QAASpG,KAAK2J,MAAMvD,QAAUpG,KAAK2J,MAAMvD,QAAhC,YAAsD,GAC9DpG,KAAK4H,SAJY,IAIE5H,KAJtB,eAMFuK,UApPO,WAoP6B,WAClCjE,OAAA,uBAA6B,WAC3B,MAA6B,EAA7B,MAAM,EAAN,EAAM,QAAWF,EAAjB,EAAiBA,QAEjB,SAAc,CACZD,QAASA,EAAUA,EAAH,YADJ,EAEZC,QAASA,EAAUA,EAAH,YAAyB,GAM3C,gBAAqB,mBAA0B,SAA/C,QAEA,wBAKNnE,OArYO,SAqYD,GACJ,OAAOC,EAAE,MAAOlC,KAAR,UAAwB,CAC9BA,KAD8B,UAE9BA,KAF8B,aAG9BA,KAHF,eAQWkF,EAAA,OAAsB,CACnCpG,KADmC,gBAGnCkG,QAHmC,WAIjC,MAAO,CACLwF,WAAYxK,U,4OC/aZyK,EAAa,eAAO,EAAD,0BAKvB,eALuB,aAMvB,eAAkB,eAOL,OAAAA,EAAA,gBAAoC,CACjD3L,KADiD,QAGjDG,MAAO,CACLwD,YAAa,CACXpD,KADW,OAEXE,QAFW,WAGT,OAAKS,KAAL,UAEOA,KAAK0K,UAAZ,YAF4B,KAKhCC,MATK,QAULC,UAVK,QAWLC,IAXK,QAYLlD,KAZK,QAaLmD,QAbK,QAcLC,SAdK,QAeLC,MAfK,QAgBLC,mBAhBK,QAiBLC,QAjBK,QAkBLrI,IAAK,CACHxD,KADG,OAEHE,QAAS,UAEX4L,KAtBK,QAuBLC,KAvBK,QAwBL/L,KAAM,CACJA,KADI,OAEJE,QAAS,UAEXG,MAAO,MAGTC,KAAM,iBAAO,CACX0L,WAAY,kBAGdvL,SAAU,CACRK,QADQ,WAEN,mFACE,SADK,GAEF,qCAFE,OAAP,IAGE,kBAAmBH,KAHd,SAIL,eAAgBA,KAJX,MAKL,gBAAiBA,KALZ,OAML,kBAAmBA,KANd,SAOL,qBAAsBA,KAPjB,WAQL,aAAcA,KART,IASL,eAAgBA,KATX,MAUL,gBAAiBA,KAVZ,MAWL,cAAeA,KAXV,KAYL,cAAeA,KAZV,KAaL,iBAAkBA,KAbb,QAcL,kBAAmBA,KAdd,SAeL,eAAgBA,KAfX,MAgBL,eAAgBA,KAhBX,MAiBL,eAAgBA,KAjBX,QAkBL,iBAAkBA,KAlBb,QAmBL,gBAAiBA,KAnBZ,GAoBL,cAAeA,KApBV,KAqBL,cAAeA,KArBV,KAsBL,aAAcA,KAtBT,KAuBFA,KAvBE,cAwBFA,KAxBE,cAyBFA,KAzBE,kBA0BFA,KAAKsL,kBAGZC,kBA/BQ,WAgCN,IAAIvL,KAAJ,SAEA,OAAO,+CAAP,OAEFwL,eApCQ,WAoCM,MACNC,GAAgBzL,KAAK2H,OAAQ3H,KAAb,KAAwB,CAAE0L,QAAQ,GACxD,OAAI1L,KAAJ,WACK,SAAOA,KAAP,cAEP2L,MAzCQ,WA0CN,OAAQ3L,KAAD,OAAeA,KAAf,QAA8BA,KAA9B,WAAgDA,KAAvD,MAEF4L,WA5CQ,WA6CN,OAAOnG,SACJzF,KAAD,OACCA,KADD,OAECA,KAFD,WAGCA,KAHD,YAICA,KAJD,WAKCA,KALD,QAMmB,MAAlBA,KAAK6L,WAAqBvM,OAAOU,KAAP,WAP7B,KAUF8L,QAvDQ,WAwDN,OAAOrG,QACLzF,KAAK2H,MACL3H,KAFF,MAKFS,OA7DQ,WA8DN,yBACKT,KAAK+L,oBAKdnI,QA1GiD,WA0G1C,WACCoI,EAAgB,CACpB,CAAC,OADmB,QAEpB,CAAC,UAFmB,YAGpB,CAAC,QAHH,YAOAA,EAAA,SAAsB,YAA4B,0BAA3B,EAA2B,KAA5B,EAA4B,KAC5C,wBAAJ,IAA0C,eAASC,EAAUC,EAAnB,OAI9CpL,QAAS,CACPuG,MADO,SACF,IAEFrH,KAAD,qBAA6BA,KAA7B,KAAyCsI,EAAzC,QAAqDtI,KAAKmM,IAA1D,OACAnM,KAAA,iBAEAA,KAAA,WAAkBA,KAAlB,UAEFuH,WARO,WASL,OAAOvH,KAAKgB,eAAe,OAAQ,CACjCc,YAAa,kBACZ9B,KAAK+B,OAFR,UAIFqK,UAbO,WAcL,OAAOpM,KAAKgB,eAAe,OAAQ,CACjCC,MAAO,iBACNjB,KAAK+B,OAAOsK,QAAU,CAACrM,KAAKgB,eAAe,EAApB,KAAuC,CAC/D/B,MAAO,CACLE,eADK,EAELK,KAFK,GAGLC,MAAO,SAMfwC,OAjJiD,SAiJ3C,GACJ,IAAMR,EAAW,CACfzB,KADe,aAEfA,KAAK8K,SAAW9K,KAFlB,aAIA,EAAsBA,KAAtB,oBAAM,EAAN,EAAM,IAAOL,EAAb,EAAaA,KACP2M,EAAWtM,KAAK2L,MAClB3L,KADa,mBAEbA,KAFJ,aAYA,MARA,WAAI6C,IACFlD,EAAA,WAAmBK,KAAnB,KACAL,EAAA,eAAuBK,KAAvB,UAEFL,EAAA,YAAoB,CAAC,SAAU,UAAU4M,SAAS,OAA9B,OAA8B,CAAOvM,KAArC,QAChBA,KADgB,MAEhBwM,KAAA,UAAexM,KAFnB,OAIOkC,EAAEW,EAAK7C,KAAKiI,SAAWtI,EAAO2M,EAAStM,KAAD,MAArC,GAAR,O","file":"js/chunk-bd72992e.73e0a202.js","sourcesContent":["import VProgressCircular from './VProgressCircular'\n\nexport { VProgressCircular }\nexport default VProgressCircular\n","// Styles\nimport './VProgressCircular.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  directives: { intersect },\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n    isVisible: true,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--visible': this.isVisible,\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n    onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n      this.isVisible = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      directives: [{\n        name: 'intersect',\n        value: this.onObserve,\n      }],\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","// Styles\nimport './VItemGroup.sass'\n\n// Mixins\nimport Groupable from '../../mixins/groupable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue/types'\n\nexport type GroupableInstance = InstanceType<typeof Groupable> & {\n  id?: string\n  to?: any\n  value?: any\n }\n\nexport const BaseItemGroup = mixins(\n  Proxyable,\n  Themeable\n).extend({\n  name: 'base-item-group',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active',\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null,\n    },\n    multiple: Boolean,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  data () {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      items: [] as GroupableInstance[],\n    }\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-item-group': true,\n        ...this.themeClasses,\n      }\n    },\n    selectedIndex (): number {\n      return (this.selectedItem && this.items.indexOf(this.selectedItem)) || -1\n    },\n    selectedItem (): GroupableInstance | undefined {\n      if (this.multiple) return undefined\n\n      return this.selectedItems[0]\n    },\n    selectedItems (): GroupableInstance[] {\n      return this.items.filter((item, index) => {\n        return this.toggleMethod(this.getValue(item, index))\n      })\n    },\n    selectedValues (): any[] {\n      if (this.internalValue == null) return []\n\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : [this.internalValue]\n    },\n    toggleMethod (): (v: any) => boolean {\n      if (!this.multiple) {\n        return (v: any) => this.internalValue === v\n      }\n\n      const internalValue = this.internalValue\n      if (Array.isArray(internalValue)) {\n        return (v: any) => internalValue.includes(v)\n      }\n\n      return () => false\n    },\n  },\n\n  watch: {\n    internalValue: 'updateItemsState',\n    items: 'updateItemsState',\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n\n    genData (): object {\n      return {\n        class: this.classes,\n      }\n    },\n    getValue (item: GroupableInstance, i: number): unknown {\n      return item.value == null || item.value === ''\n        ? i\n        : item.value\n    },\n    onClick (item: GroupableInstance) {\n      this.updateInternalValue(\n        this.getValue(item, this.items.indexOf(item))\n      )\n    },\n    register (item: GroupableInstance) {\n      const index = this.items.push(item) - 1\n\n      item.$on('change', () => this.onClick(item))\n\n      // If no value provided and mandatory,\n      // assign first registered item\n      if (this.mandatory && !this.selectedValues.length) {\n        this.updateMandatory()\n      }\n\n      this.updateItem(item, index)\n    },\n    unregister (item: GroupableInstance) {\n      if (this._isDestroyed) return\n\n      const index = this.items.indexOf(item)\n      const value = this.getValue(item, index)\n\n      this.items.splice(index, 1)\n\n      const valueIndex = this.selectedValues.indexOf(value)\n\n      // Items is not selected, do nothing\n      if (valueIndex < 0) return\n\n      // If not mandatory, use regular update process\n      if (!this.mandatory) {\n        return this.updateInternalValue(value)\n      }\n\n      // Remove the value\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(v => v !== value)\n      } else {\n        this.internalValue = undefined\n      }\n\n      // If mandatory and we have no selection\n      // add the last item as value\n      /* istanbul ignore else */\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true)\n      }\n    },\n    updateItem (item: GroupableInstance, index: number) {\n      const value = this.getValue(item, index)\n\n      item.isActive = this.toggleMethod(value)\n    },\n    // https://github.com/vuetifyjs/vuetify/issues/5352\n    updateItemsState () {\n      this.$nextTick(() => {\n        if (this.mandatory &&\n          !this.selectedItems.length\n        ) {\n          return this.updateMandatory()\n        }\n\n        // TODO: Make this smarter so it\n        // doesn't have to iterate every\n        // child in an update\n        this.items.forEach(this.updateItem)\n      })\n    },\n    updateInternalValue (value: any) {\n      this.multiple\n        ? this.updateMultiple(value)\n        : this.updateSingle(value)\n    },\n    updateMandatory (last?: boolean) {\n      if (!this.items.length) return\n\n      const items = this.items.slice()\n\n      if (last) items.reverse()\n\n      const item = items.find(item => !item.disabled)\n\n      // If no tabs are available\n      // aborts mandatory value\n      if (!item) return\n\n      const index = this.items.indexOf(item)\n\n      this.updateInternalValue(\n        this.getValue(item, index)\n      )\n    },\n    updateMultiple (value: any) {\n      const defaultValue = Array.isArray(this.internalValue)\n        ? this.internalValue\n        : []\n      const internalValue = defaultValue.slice()\n      const index = internalValue.findIndex(val => val === value)\n\n      if (\n        this.mandatory &&\n        // Item already exists\n        index > -1 &&\n        // value would be reduced below min\n        internalValue.length - 1 < 1\n      ) return\n\n      if (\n        // Max is set\n        this.max != null &&\n        // Item doesn't exist\n        index < 0 &&\n        // value would be increased above max\n        internalValue.length + 1 > this.max\n      ) return\n\n      index > -1\n        ? internalValue.splice(index, 1)\n        : internalValue.push(value)\n\n      this.internalValue = internalValue\n    },\n    updateSingle (value: any) {\n      const isSame = value === this.internalValue\n\n      if (this.mandatory && isSame) return\n\n      this.internalValue = isSame ? undefined : value\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, this.genData(), this.$slots.default)\n  },\n})\n\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n\n  provide (): object {\n    return {\n      itemGroup: this,\n    }\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft <= currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth <= itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","// Styles\nimport './VBtn.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VProgressCircular from '../VProgressCircular'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Elevatable from '../../mixins/elevatable'\nimport Positionable from '../../mixins/positionable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator, PropType } from 'vue/types/options'\nimport { RippleOptions } from '../../directives/ripple'\n\nconst baseMixins = mixins(\n  VSheet,\n  Routable,\n  Positionable,\n  Sizeable,\n  GroupableFactory('btnToggle'),\n  ToggleableFactory('inputValue')\n  /* @vue/component */\n)\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-btn',\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.btnToggle) return ''\n\n        return this.btnToggle.activeClass\n      },\n    } as any as PropValidator<string>,\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    icon: Boolean,\n    loading: Boolean,\n    outlined: Boolean,\n    plain: Boolean,\n    retainFocusOnClick: Boolean,\n    rounded: Boolean,\n    tag: {\n      type: String,\n      default: 'button',\n    },\n    text: Boolean,\n    tile: Boolean,\n    type: {\n      type: String,\n      default: 'button',\n    },\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-btn--active',\n  }),\n\n  computed: {\n    classes (): any {\n      return {\n        'v-btn': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-btn--absolute': this.absolute,\n        'v-btn--block': this.block,\n        'v-btn--bottom': this.bottom,\n        'v-btn--disabled': this.disabled,\n        'v-btn--is-elevated': this.isElevated,\n        'v-btn--fab': this.fab,\n        'v-btn--fixed': this.fixed,\n        'v-btn--has-bg': this.hasBg,\n        'v-btn--icon': this.icon,\n        'v-btn--left': this.left,\n        'v-btn--loading': this.loading,\n        'v-btn--outlined': this.outlined,\n        'v-btn--plain': this.plain,\n        'v-btn--right': this.right,\n        'v-btn--round': this.isRound,\n        'v-btn--rounded': this.rounded,\n        'v-btn--router': this.to,\n        'v-btn--text': this.text,\n        'v-btn--tile': this.tile,\n        'v-btn--top': this.top,\n        ...this.themeClasses,\n        ...this.groupClasses,\n        ...this.elevationClasses,\n        ...this.sizeableClasses,\n      }\n    },\n    computedElevation (): string | number | undefined {\n      if (this.disabled) return undefined\n\n      return Elevatable.options.computed.computedElevation.call(this)\n    },\n    computedRipple (): RippleOptions | boolean {\n      const defaultRipple = this.icon || this.fab ? { circle: true } : true\n      if (this.disabled) return false\n      else return this.ripple ?? defaultRipple\n    },\n    hasBg (): boolean {\n      return !this.text && !this.plain && !this.outlined && !this.icon\n    },\n    isElevated (): boolean {\n      return Boolean(\n        !this.icon &&\n        !this.text &&\n        !this.outlined &&\n        !this.depressed &&\n        !this.disabled &&\n        !this.plain &&\n        (this.elevation == null || Number(this.elevation) > 0)\n      )\n    },\n    isRound (): boolean {\n      return Boolean(\n        this.icon ||\n        this.fab\n      )\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['flat', 'text'],\n      ['outline', 'outlined'],\n      ['round', 'rounded'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      // TODO: Remove this in v3\n      !this.retainFocusOnClick && !this.fab && e.detail && this.$el.blur()\n      this.$emit('click', e)\n\n      this.btnToggle && this.toggle()\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-btn__content',\n      }, this.$slots.default)\n    },\n    genLoader (): VNode {\n      return this.$createElement('span', {\n        class: 'v-btn__loader',\n      }, this.$slots.loader || [this.$createElement(VProgressCircular, {\n        props: {\n          indeterminate: true,\n          size: 23,\n          width: 2,\n        },\n      })])\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genContent(),\n      this.loading && this.genLoader(),\n    ]\n    const { tag, data } = this.generateRouteLink()\n    const setColor = this.hasBg\n      ? this.setBackgroundColor\n      : this.setTextColor\n\n    if (tag === 'button') {\n      data.attrs!.type = this.type\n      data.attrs!.disabled = this.disabled\n    }\n    data.attrs!.value = ['string', 'number'].includes(typeof this.value)\n      ? this.value\n      : JSON.stringify(this.value)\n\n    return h(tag, this.disabled ? data : setColor(this.color, data), children)\n  },\n})\n"],"sourceRoot":""}